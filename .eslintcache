[{"/Users/williamlytle/Flatiron/code/projects/phase5/expedition-planner-frontend/src/index.js":"1","/Users/williamlytle/Flatiron/code/projects/phase5/expedition-planner-frontend/src/reportWebVitals.js":"2","/Users/williamlytle/Flatiron/code/projects/phase5/expedition-planner-frontend/src/App.js":"3","/Users/williamlytle/Flatiron/code/projects/phase5/expedition-planner-frontend/src/components/SignUp.js":"4","/Users/williamlytle/Flatiron/code/projects/phase5/expedition-planner-frontend/src/reducers/index.js":"5","/Users/williamlytle/Flatiron/code/projects/phase5/expedition-planner-frontend/src/components/Login.js":"6","/Users/williamlytle/Flatiron/code/projects/phase5/expedition-planner-frontend/src/containers/MapContainer.js":"7","/Users/williamlytle/Flatiron/code/projects/phase5/expedition-planner-frontend/src/components/NavBar.js":"8","/Users/williamlytle/Flatiron/code/projects/phase5/expedition-planner-frontend/src/containers/Profile.js":"9","/Users/williamlytle/Flatiron/code/projects/phase5/expedition-planner-frontend/src/reducers/UserReducer.js":"10","/Users/williamlytle/Flatiron/code/projects/phase5/expedition-planner-frontend/src/actions/types.js":"11","/Users/williamlytle/Flatiron/code/projects/phase5/expedition-planner-frontend/src/actions/UserActions.js":"12","/Users/williamlytle/Flatiron/code/projects/phase5/expedition-planner-frontend/src/components/EditProfile.js":"13","/Users/williamlytle/Flatiron/code/projects/phase5/expedition-planner-frontend/src/components/SubmitButton.js":"14","/Users/williamlytle/Flatiron/code/projects/phase5/expedition-planner-frontend/src/helpers/index.js":"15","/Users/williamlytle/Flatiron/code/projects/phase5/expedition-planner-frontend/src/components/Trips.js":"16","/Users/williamlytle/Flatiron/code/projects/phase5/expedition-planner-frontend/src/components/NewTripForm.js":"17","/Users/williamlytle/Flatiron/code/projects/phase5/expedition-planner-frontend/src/constants/index.js":"18","/Users/williamlytle/Flatiron/code/projects/phase5/expedition-planner-frontend/src/actions/TripActions.js":"19","/Users/williamlytle/Flatiron/code/projects/phase5/expedition-planner-frontend/src/reducers/TripReducer.js":"20","/Users/williamlytle/Flatiron/code/projects/phase5/expedition-planner-frontend/src/components/TripDetails.js":"21","/Users/williamlytle/Flatiron/code/projects/phase5/expedition-planner-frontend/src/components/TripLeg.js":"22","/Users/williamlytle/Flatiron/code/projects/phase5/expedition-planner-frontend/src/components/LegForm.js":"23","/Users/williamlytle/Flatiron/code/projects/phase5/expedition-planner-frontend/src/reducers/MapReducer.js":"24","/Users/williamlytle/Flatiron/code/projects/phase5/expedition-planner-frontend/src/actions/MapActions.js":"25","/Users/williamlytle/Flatiron/code/projects/phase5/expedition-planner-frontend/src/components/EditTripForm.js":"26","/Users/williamlytle/Flatiron/code/projects/phase5/expedition-planner-frontend/src/components/DeleteAlert.js":"27","/Users/williamlytle/Flatiron/code/projects/phase5/expedition-planner-frontend/src/components/AsyncSearchBar.js":"28"},{"size":846,"mtime":1610729416529,"results":"29","hashOfConfig":"30"},{"size":362,"mtime":1610581828347,"results":"31","hashOfConfig":"30"},{"size":1059,"mtime":1611609727503,"results":"32","hashOfConfig":"30"},{"size":4311,"mtime":1611329582935,"results":"33","hashOfConfig":"30"},{"size":244,"mtime":1611157368250,"results":"34","hashOfConfig":"30"},{"size":2822,"mtime":1611608361414,"results":"35","hashOfConfig":"30"},{"size":8141,"mtime":1611616128810,"results":"36","hashOfConfig":"30"},{"size":5139,"mtime":1611621562467,"results":"37","hashOfConfig":"30"},{"size":1788,"mtime":1611619605672,"results":"38","hashOfConfig":"30"},{"size":651,"mtime":1611266161280,"results":"39","hashOfConfig":"30"},{"size":772,"mtime":1611622478376,"results":"40","hashOfConfig":"30"},{"size":2954,"mtime":1611265849064,"results":"41","hashOfConfig":"30"},{"size":4842,"mtime":1611619084975,"results":"42","hashOfConfig":"30"},{"size":732,"mtime":1610754962437,"results":"43","hashOfConfig":"30"},{"size":667,"mtime":1610849104924,"results":"44","hashOfConfig":"30"},{"size":5141,"mtime":1611693202769,"results":"45","hashOfConfig":"30"},{"size":3522,"mtime":1611357705299,"results":"46","hashOfConfig":"30"},{"size":212,"mtime":1611119002849,"results":"47","hashOfConfig":"30"},{"size":6393,"mtime":1611622657448,"results":"48","hashOfConfig":"30"},{"size":3247,"mtime":1611622634672,"results":"49","hashOfConfig":"30"},{"size":5435,"mtime":1611695786145,"results":"50","hashOfConfig":"30"},{"size":506,"mtime":1611428032858,"results":"51","hashOfConfig":"30"},{"size":3331,"mtime":1611257558524,"results":"52","hashOfConfig":"30"},{"size":455,"mtime":1611158213116,"results":"53","hashOfConfig":"30"},{"size":257,"mtime":1611158377998,"results":"54","hashOfConfig":"30"},{"size":3968,"mtime":1611611343824,"results":"55","hashOfConfig":"30"},{"size":696,"mtime":1611443323328,"results":"56","hashOfConfig":"30"},{"size":1052,"mtime":1611598921796,"results":"57","hashOfConfig":"30"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},"13aw72n",{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"60"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"60"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87","usedDeprecatedRules":"60"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},"/Users/williamlytle/Flatiron/code/projects/phase5/expedition-planner-frontend/src/index.js",[],["118","119"],"/Users/williamlytle/Flatiron/code/projects/phase5/expedition-planner-frontend/src/reportWebVitals.js",[],"/Users/williamlytle/Flatiron/code/projects/phase5/expedition-planner-frontend/src/App.js",[],"/Users/williamlytle/Flatiron/code/projects/phase5/expedition-planner-frontend/src/components/SignUp.js",[],"/Users/williamlytle/Flatiron/code/projects/phase5/expedition-planner-frontend/src/reducers/index.js",[],"/Users/williamlytle/Flatiron/code/projects/phase5/expedition-planner-frontend/src/components/Login.js",[],"/Users/williamlytle/Flatiron/code/projects/phase5/expedition-planner-frontend/src/containers/MapContainer.js",["120","121"],"import React, { useRef, useEffect, useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport { useParams, useHistory } from \"react-router-dom\";\nimport L, { latLngBounds } from \"leaflet\";\nimport { TileLayer, Map, FeatureGroup, LayersControl } from \"react-leaflet\";\nimport { EditControl } from \"react-leaflet-draw\";\nimport SlidingPane from \"react-sliding-pane\";\nimport \"react-sliding-pane/dist/react-sliding-pane.css\";\nimport \"leaflet/dist/leaflet.css\";\nimport \"leaflet-draw/dist/leaflet.draw.css\";\nimport { addLeg, getTrip, editLeg, deleteLeg } from \"../actions/TripActions\";\nimport { togglePane, openPane } from \"../actions/MapActions\";\nimport TripLeg from \"../components/TripLeg\";\nimport LegForm from \"..//components/LegForm\";\n\nconst MapContainer = ({\n  trip,\n  pane,\n  selectedLeg,\n  user,\n  addLeg,\n  getTrip,\n  editLeg,\n  deleteLeg,\n  togglePane,\n  openPane,\n}) => {\n  // initialize ref to edit controls\n  const editRef = useRef();\n  const mapRef = useRef();\n  const centerRef = useRef();\n\n  const [bounds, setBounds] = useState(false);\n  let history = useHistory();\n  // Get id of trip from route\n  let { id } = useParams();\n\n  //set temporary default cetner at Upset Rapid\n  const c = [36.355308, -112.695433];\n\n  //calcualte distance of polyline\n  const getDistance = (locs) => {\n    let distance = 0;\n    for (let i = 0; i < locs.length - 1; i++) {\n      distance += locs[i].distanceTo(locs[i + 1]);\n    }\n    return distance;\n  };\n\n  //update the backend and state on confirmation of leg created\n  const _onCreate = (e) => {\n    console.log(e);\n    // onShapeDrawn(e);\n    const { layerType, layer } = e;\n    if (layerType === \"marker\") {\n    }\n    if (layerType === \"polyline\") {\n      // calculate distance of polyline\n      const distance = getDistance(layer.getLatLngs());\n      // Add new leg to db and to state\n      addLeg(id, {\n        sport: \"Hike\",\n        latlngs: layer.getLatLngs(),\n        distance,\n      });\n      //remove the layer from the drawn functional group it will be rerendered from state to allow fo identical access controls for all paaths newly created and laoded in\n      const fg = editRef.current.leafletElement.options.edit.featureGroup;\n      fg.removeLayer(fg._layers[e.layer._leaflet_id]);\n    }\n  };\n\n  ////update the backend and state on confirmation of leg edited\n  const _onEdit = (e) => {\n    console.log(e);\n    const {\n      layers: { _layers },\n    } = e;\n    Object.values(_layers).forEach((layer) => {\n      // get the id of the leg beign edited\n      const id = layer.options.legId;\n      //get the distances between each point\n      const distance = getDistance(layer.getLatLngs());\n      //update track in the backend and re-render the updated trip\n      editLeg(id, layer._latlngs, distance);\n    });\n  };\n\n  //update the backend and state on confirmation of leg deleted\n  const _onDelete = (e) => {\n    console.log(e);\n    const {\n      layers: { _layers },\n    } = e;\n    Object.values(_layers).forEach((layer) => {\n      //get the id of the leg being deleted\n      const id = layer.options.legId;\n      //Update the database and state with delete leg\n      deleteLeg(id);\n    });\n  };\n\n  // fly map to current lcoation and add circle showing accuracy of location\n  const handleOnLocationFound = (e) => {\n    const { current = {} } = mapRef;\n    const { leafletElement: map } = current;\n    const latlng = e.latlng;\n    centerRef.current = latlng;\n    map.flyTo(latlng, 14, { duration: 2 });\n    const radius = e.accuracy;\n    const circle = L.circle(latlng, radius);\n    circle.addTo(map);\n  };\n\n  const getMapLoc = async (map) => {\n    await map.locate();\n  };\n\n  const toggleEdit = (e) => {\n    // Dont open the edit pane if the delete button is currently selected\n    if (\n      editRef.current.leafletElement._toolbars.edit._modes.remove.handler.enabled()\n    )\n      return;\n    const leg = trip.legs.find((leg) => leg.id === e.target.options.legId);\n    openPane(leg);\n  };\n\n  //close edit pane on close button click\n  const closePane = () => {\n    togglePane();\n  };\n\n  // Reload current trip from database incase of page load\n  useEffect(() => {\n    //Prevent not logged in users form seeing the map\n    if (!user.id && !localStorage.getItem(\"userId\")) {\n      history.push(\"/login\");\n    }\n    if (trip.id && !bounds && !centerRef.current) {\n      // if a trip is loaded into state app state and componenet state has no bounds, get the bounds\n      if (trip?.locations?.length) {\n        const mapBounds = latLngBounds();\n        trip.locations.forEach((loc) => mapBounds.extend([loc.lat, loc.lng]));\n        // if there are legs to get bounds from set them in state\n        setBounds(mapBounds.pad(0.1));\n      } else if (mapRef.current) {\n        const { current = {} } = mapRef;\n        const { leafletElement: map } = current;\n        //Get current location if no legs yet and fly screen there.\n        getMapLoc(map);\n        map.on(\"locationfound\", handleOnLocationFound);\n      }\n    } else if (!trip.id) {\n      // load trip into state if it's not there yet\n      getTrip(id);\n    }\n  });\n\n  console.log(trip?.locations?.length, trip);\n  return (\n    <>\n      <SlidingPane\n        closeIcon={<p>X</p>}\n        isOpen={pane}\n        title={`Distance: ${(selectedLeg.distance / 1000).toFixed(2)} km AEG: ${\n          selectedLeg.aeg\n        } m`}\n        from=\"left\"\n        width=\"400px\"\n        className=\"pane-overlay\"\n        onRequestClose={() => closePane()}\n      >\n        <LegForm leg={selectedLeg} />\n      </SlidingPane>\n      <Map\n        id=\"mapid\"\n        className={pane ? \"map-respond\" : \"map\"}\n        ref={mapRef}\n        bounds={trip?.locations?.length && bounds}\n        center={c}\n        zoom={13}\n        scrollWheelZoom={true}\n      >\n        <LayersControl>\n          <LayersControl.BaseLayer name=\"Street\">\n            <TileLayer\n              attribution='&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\n              url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n            />\n          </LayersControl.BaseLayer>\n          <LayersControl.BaseLayer checked name=\"Topo\">\n            <TileLayer\n              attribution='&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors <a href=\"http://viewfinderpanoramas.org\">SRTM</a> | map style: © <a href=\"https://opentopomap.org\">OpenTopoMap</a> (<a href=\"https://creativecommons.org/licenses/by-sa/3.0/\">CC-BY-SA</a>)'\n              url=\"http://{s}.tile.opentopomap.org/{z}/{x}/{y}.png\"\n            />\n          </LayersControl.BaseLayer>\n          <FeatureGroup>\n            <EditControl\n              ref={editRef}\n              position=\"topright\"\n              onCreated={_onCreate}\n              onEdited={_onEdit}\n              onDeleted={_onDelete}\n              draw={{\n                layers: true,\n                rectangle: false,\n                polyline: {\n                  shapeOptions: {\n                    color: \"red\",\n                  },\n                },\n                circle: false,\n                circlemarker: false,\n                polygon: false,\n                marker: true,\n              }}\n            />\n            {/* add in all of the existing trip legs */}\n            {trip.legs\n              ? trip.legs.map((leg) => (\n                  <TripLeg\n                    key={leg.id}\n                    id={leg.id}\n                    sport={leg.sport}\n                    toggleEdit={toggleEdit}\n                    locs={trip.locations.filter((loc) => {\n                      if (loc.leg_id === leg.id) {\n                        return [loc.lat, loc.lng];\n                      }\n                    })}\n                  />\n                ))\n              : null}\n          </FeatureGroup>\n        </LayersControl>\n      </Map>\n    </>\n  );\n};\nconst mapStateToProps = (state) => {\n  return {\n    trip: state.TripReducer.trip,\n    pane: state.MapReducer.pane,\n    selectedLeg: state.MapReducer.selectedLeg,\n    user: state.UserReducer.user,\n  };\n};\n\nexport default connect(mapStateToProps, {\n  deleteLeg,\n  addLeg,\n  getTrip,\n  editLeg,\n  togglePane,\n  openPane,\n})(MapContainer);\n","/Users/williamlytle/Flatiron/code/projects/phase5/expedition-planner-frontend/src/components/NavBar.js",[],"/Users/williamlytle/Flatiron/code/projects/phase5/expedition-planner-frontend/src/containers/Profile.js",["122"],"import React, { useEffect } from \"react\";\nimport { connect } from \"react-redux\";\nimport { useHistory, useLocation } from \"react-router-dom\";\nimport { Container, Row, Col } from \"react-bootstrap\";\nimport EditProfile from \"../components/EditProfile\";\nimport Trips from \"../components/Trips\";\nimport { signedIn } from \"../actions/UserActions\";\nimport { getInvites, getTrips } from \"../actions/TripActions\";\n\nconst Profile = ({\n  user,\n  fetched,\n  allTrips,\n  signedIn,\n  getTrips,\n  getInvites,\n}) => {\n  let history = useHistory();\n  let location = useLocation();\n\n  useEffect(() => {\n    //No user signd in but session in local storage sign user in\n    if (!user.id && localStorage.getItem(\"userId\")) {\n      signedIn({\n        id: localStorage.getItem(\"userId\"),\n        username: localStorage.getItem(\"username\"),\n      });\n      // Load all the user's trips into state\n      if (!fetched) {\n        getTrips();\n        getInvites();\n      }\n      //no user or session rdirect to login page\n    } else if (!user.id && !localStorage.getItem(\"userId\")) {\n      history.push(\"/login\");\n    } else if (!fetched) {\n      // Load all the user's trips into state\n      getTrips();\n      getInvites();\n    }\n  });\n  return (\n    <Container>\n      <Row>\n        <h1 className=\"d-flex align-items-center justify-content-center\">\n          {location.pathname === \"/profile\" ? \"My Trips\" : \"My Invitations\"}\n        </h1>\n      </Row>\n      <Row>\n        <Col>\n          <Trips />\n        </Col>\n      </Row>\n    </Container>\n  );\n};\n\nconst mapStateToProps = (state) => {\n  return {\n    user: state.UserReducer.user,\n    allTrips: state.TripReducer.allTrips,\n    fetched: state.TripReducer.fetched,\n  };\n};\n\nexport default connect(mapStateToProps, { signedIn, getTrips, getInvites })(\n  Profile\n);\n","/Users/williamlytle/Flatiron/code/projects/phase5/expedition-planner-frontend/src/reducers/UserReducer.js",[],"/Users/williamlytle/Flatiron/code/projects/phase5/expedition-planner-frontend/src/actions/types.js",[],"/Users/williamlytle/Flatiron/code/projects/phase5/expedition-planner-frontend/src/actions/UserActions.js",[],"/Users/williamlytle/Flatiron/code/projects/phase5/expedition-planner-frontend/src/components/EditProfile.js",["123"],"import React, { useState, useEffect } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { Button, Col, Row, Container, Form, Card } from \"react-bootstrap\";\nimport { connect } from \"react-redux\";\nimport {\n  signedIn,\n  editUser,\n  failedAuth,\n  handleLogOut,\n} from \"../actions/UserActions\";\nimport SubmitButton from \"./SubmitButton\";\nimport DeleteAlert from \"../components/DeleteAlert\";\nimport canyon from \"../images/grand-canyon.JPG\";\n\nconst EditProfile = ({ user, editUser, failedAuth, error, handleLogOut }) => {\n  const [username, setUsername] = useState(user.username);\n  const [password, setPassword] = useState(\"\");\n  const [passwordConfirmation, setPasswordConfirmation] = useState(\"\");\n  const [show, setShow] = useState(false);\n  let history = useHistory();\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    if (password === passwordConfirmation) {\n      const id = user.id;\n      editUser(id, username, password);\n    } else {\n      failedAuth(\"Passords must match!\");\n    }\n  };\n\n  const deleteClicked = () => {\n    setShow(true);\n  };\n\n  const handleDelete = () => {\n    const id = user.id;\n    const token = localStorage.getItem(\"jwt\");\n    fetch(`http://localhost:3000/users/${id}`, {\n      method: \"DELETE\",\n      headers: {\n        Authorization: `bearer ${token}`,\n      },\n    }).then(() => {\n      localStorage.clear();\n      handleLogOut();\n      history.push(\"/\");\n    });\n  };\n\n  // if useState got set before redux state was loaded in set the suer naem to auto fill the form\n  useEffect(() => {\n    if (!user.id && !localStorage.getItem(\"userId\")) {\n      history.push(\"/login\");\n    } else if (user.id && !username) {\n      setUsername(user.username);\n    }\n  });\n  const inputClass = error ? \"is-invalid\" : \"\";\n  return (\n    <section>\n      <Container className=\"min-vh-100\">\n        <DeleteAlert\n          show={show}\n          item={\"profile\"}\n          deleteAction={handleDelete}\n          closeAction={setShow}\n        />\n        <Row className=\" min-vh-100\">\n          <Col\n            id=\"login\"\n            md={{ span: 6, offset: 0 }}\n            style={{ marginTop: \"40px\" }}\n          >\n            {\" \"}\n            <Card>\n              <Card.Img src={canyon} alt=\"Grand Canyon\" />\n            </Card>{\" \"}\n          </Col>\n          <Col md={{ span: 4, offset: 1 }} style={{ marginTop: \"40px\" }}>\n            <Card>\n              <Card.Body>\n                <Form onSubmit={handleSubmit}>\n                  <Form.Group controlId=\"formBasicUsername\">\n                    <Form.Label>Username</Form.Label>\n                    <Form.Control\n                      className={inputClass}\n                      type=\"text\"\n                      name=\"username\"\n                      placeholder=\"UserName\"\n                      value={username}\n                      onChange={(e) => setUsername(e.target.value)}\n                    />\n                  </Form.Group>\n\n                  <Form.Group controlId=\"formBasicPassword\">\n                    <Form.Label className=\"form-label\">New Password</Form.Label>\n                    <Form.Control\n                      className={inputClass}\n                      type=\"password\"\n                      name=\"Password\"\n                      placeholder=\"New Password\"\n                      value={password}\n                      onChange={(e) => setPassword(e.target.value)}\n                    />\n                  </Form.Group>\n\n                  <Form.Group controlId=\"formBasicPasswordConfirmation\">\n                    <Form.Label className=\"form-label\">\n                      Confirm New Password\n                    </Form.Label>\n                    <Form.Control\n                      className={inputClass}\n                      type=\"password\"\n                      name=\"passwordConfirmation\"\n                      placeholder=\"Password\"\n                      value={passwordConfirmation}\n                      onChange={(e) => setPasswordConfirmation(e.target.value)}\n                    />\n                    <div className=\"invalid-feedback\">{error}</div>\n                  </Form.Group>\n\n                  <SubmitButton btnTxt={\"Update Profile\"} />\n                  <Button\n                    variant=\"outline-danger form-btn\"\n                    type=\"button\"\n                    onClick={deleteClicked}\n                  >\n                    Delete Account\n                  </Button>\n                </Form>\n              </Card.Body>\n            </Card>\n          </Col>\n        </Row>\n      </Container>\n    </section>\n  );\n};\nconst mapStateToProps = (state) => {\n  return {\n    user: state.UserReducer.user,\n    fetching: state.UserReducer.fetching,\n    error: state.UserReducer.error,\n  };\n};\n\nexport default connect(mapStateToProps, {\n  signedIn,\n  editUser,\n  failedAuth,\n  handleLogOut,\n})(EditProfile);\n","/Users/williamlytle/Flatiron/code/projects/phase5/expedition-planner-frontend/src/components/SubmitButton.js",[],"/Users/williamlytle/Flatiron/code/projects/phase5/expedition-planner-frontend/src/helpers/index.js",[],"/Users/williamlytle/Flatiron/code/projects/phase5/expedition-planner-frontend/src/components/Trips.js",["124"],"/Users/williamlytle/Flatiron/code/projects/phase5/expedition-planner-frontend/src/components/NewTripForm.js",[],"/Users/williamlytle/Flatiron/code/projects/phase5/expedition-planner-frontend/src/constants/index.js",[],"/Users/williamlytle/Flatiron/code/projects/phase5/expedition-planner-frontend/src/actions/TripActions.js",[],"/Users/williamlytle/Flatiron/code/projects/phase5/expedition-planner-frontend/src/reducers/TripReducer.js",[],"/Users/williamlytle/Flatiron/code/projects/phase5/expedition-planner-frontend/src/components/TripDetails.js",["125"],"/Users/williamlytle/Flatiron/code/projects/phase5/expedition-planner-frontend/src/components/TripLeg.js",[],"/Users/williamlytle/Flatiron/code/projects/phase5/expedition-planner-frontend/src/components/LegForm.js",[],"/Users/williamlytle/Flatiron/code/projects/phase5/expedition-planner-frontend/src/reducers/MapReducer.js",[],"/Users/williamlytle/Flatiron/code/projects/phase5/expedition-planner-frontend/src/actions/MapActions.js",[],"/Users/williamlytle/Flatiron/code/projects/phase5/expedition-planner-frontend/src/components/EditTripForm.js",[],"/Users/williamlytle/Flatiron/code/projects/phase5/expedition-planner-frontend/src/components/DeleteAlert.js",[],"/Users/williamlytle/Flatiron/code/projects/phase5/expedition-planner-frontend/src/components/AsyncSearchBar.js",[],{"ruleId":"126","replacedBy":"127"},{"ruleId":"128","replacedBy":"129"},{"ruleId":"130","severity":1,"message":"131","line":134,"column":3,"nodeType":"132","endLine":134,"endColumn":12,"suggestions":"133"},{"ruleId":"134","severity":1,"message":"135","line":226,"column":55,"nodeType":"136","messageId":"137","endLine":226,"endColumn":57},{"ruleId":"138","severity":1,"message":"139","line":5,"column":8,"nodeType":"132","messageId":"140","endLine":5,"endColumn":19},{"ruleId":"130","severity":1,"message":"141","line":52,"column":3,"nodeType":"132","endLine":52,"endColumn":12,"suggestions":"142"},{"ruleId":"138","severity":1,"message":"143","line":38,"column":11,"nodeType":"132","messageId":"140","endLine":38,"endColumn":13},{"ruleId":"138","severity":1,"message":"144","line":6,"column":29,"nodeType":"132","messageId":"140","endLine":6,"endColumn":42},"no-native-reassign",["145"],"no-negated-in-lhs",["146"],"react-hooks/exhaustive-deps","React Hook useEffect contains a call to 'setBounds'. Without a list of dependencies, this can lead to an infinite chain of updates. To fix this, pass [user.id, trip.id, trip.locations, bounds, history, getTrip, id] as a second argument to the useEffect Hook.","Identifier",["147"],"array-callback-return","Array.prototype.filter() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","no-unused-vars","'EditProfile' is defined but never used.","unusedVar","React Hook useEffect contains a call to 'setUsername'. Without a list of dependencies, this can lead to an infinite chain of updates. To fix this, pass [user.id, user.username, username, history] as a second argument to the useEffect Hook.",["148"],"'id' is assigned a value but never used.","'ListGroupItem' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"149","fix":"150"},{"desc":"151","fix":"152"},"Add dependencies array: [user.id, trip.id, trip.locations, bounds, history, getTrip, id]",{"range":"153","text":"154"},"Add dependencies array: [user.id, user.username, username, history]",{"range":"155","text":"156"},[5077,5077],", [user.id, trip.id, trip.locations, bounds, history, getTrip, id]",[1715,1715],", [user.id, user.username, username, history]"]