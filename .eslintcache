[{"/Users/williamlytle/Flatiron/code/projects/phase5/expedition-planner-frontend/src/index.js":"1","/Users/williamlytle/Flatiron/code/projects/phase5/expedition-planner-frontend/src/reportWebVitals.js":"2","/Users/williamlytle/Flatiron/code/projects/phase5/expedition-planner-frontend/src/App.js":"3","/Users/williamlytle/Flatiron/code/projects/phase5/expedition-planner-frontend/src/components/SignUp.js":"4","/Users/williamlytle/Flatiron/code/projects/phase5/expedition-planner-frontend/src/reducers/index.js":"5","/Users/williamlytle/Flatiron/code/projects/phase5/expedition-planner-frontend/src/components/Login.js":"6","/Users/williamlytle/Flatiron/code/projects/phase5/expedition-planner-frontend/src/containers/MapContainer.js":"7","/Users/williamlytle/Flatiron/code/projects/phase5/expedition-planner-frontend/src/components/NavBar.js":"8","/Users/williamlytle/Flatiron/code/projects/phase5/expedition-planner-frontend/src/containers/Profile.js":"9","/Users/williamlytle/Flatiron/code/projects/phase5/expedition-planner-frontend/src/reducers/UserReducer.js":"10","/Users/williamlytle/Flatiron/code/projects/phase5/expedition-planner-frontend/src/actions/types.js":"11","/Users/williamlytle/Flatiron/code/projects/phase5/expedition-planner-frontend/src/actions/UserActions.js":"12","/Users/williamlytle/Flatiron/code/projects/phase5/expedition-planner-frontend/src/components/EditProfile.js":"13","/Users/williamlytle/Flatiron/code/projects/phase5/expedition-planner-frontend/src/components/SubmitButton.js":"14","/Users/williamlytle/Flatiron/code/projects/phase5/expedition-planner-frontend/src/helpers/index.js":"15","/Users/williamlytle/Flatiron/code/projects/phase5/expedition-planner-frontend/src/components/Trips.js":"16","/Users/williamlytle/Flatiron/code/projects/phase5/expedition-planner-frontend/src/components/NewTripForm.js":"17","/Users/williamlytle/Flatiron/code/projects/phase5/expedition-planner-frontend/src/constants/index.js":"18","/Users/williamlytle/Flatiron/code/projects/phase5/expedition-planner-frontend/src/actions/TripActions.js":"19","/Users/williamlytle/Flatiron/code/projects/phase5/expedition-planner-frontend/src/reducers/TripReducer.js":"20","/Users/williamlytle/Flatiron/code/projects/phase5/expedition-planner-frontend/src/components/TripDetails.js":"21","/Users/williamlytle/Flatiron/code/projects/phase5/expedition-planner-frontend/src/components/TripLeg.js":"22","/Users/williamlytle/Flatiron/code/projects/phase5/expedition-planner-frontend/src/components/LegForm.js":"23","/Users/williamlytle/Flatiron/code/projects/phase5/expedition-planner-frontend/src/reducers/MapReducer.js":"24","/Users/williamlytle/Flatiron/code/projects/phase5/expedition-planner-frontend/src/actions/MapActions.js":"25","/Users/williamlytle/Flatiron/code/projects/phase5/expedition-planner-frontend/src/components/EditTripForm.js":"26","/Users/williamlytle/Flatiron/code/projects/phase5/expedition-planner-frontend/src/components/DeleteAlert.js":"27","/Users/williamlytle/Flatiron/code/projects/phase5/expedition-planner-frontend/src/components/AsyncSearchBar.js":"28","/Users/williamlytle/Flatiron/code/projects/phase5/expedition-planner-frontend/src/containers/EleContainer.js":"29","/Users/williamlytle/Flatiron/code/projects/phase5/expedition-planner-frontend/src/components/EleChart.js":"30"},{"size":824,"mtime":1611795337475,"results":"31","hashOfConfig":"32"},{"size":362,"mtime":1610581828347,"results":"33","hashOfConfig":"32"},{"size":1059,"mtime":1611609727503,"results":"34","hashOfConfig":"32"},{"size":4311,"mtime":1611329582935,"results":"35","hashOfConfig":"32"},{"size":244,"mtime":1611157368250,"results":"36","hashOfConfig":"32"},{"size":2822,"mtime":1611608361414,"results":"37","hashOfConfig":"32"},{"size":8836,"mtime":1611845938621,"results":"38","hashOfConfig":"32"},{"size":5813,"mtime":1611846234007,"results":"39","hashOfConfig":"32"},{"size":1735,"mtime":1611793717014,"results":"40","hashOfConfig":"32"},{"size":651,"mtime":1611266161280,"results":"41","hashOfConfig":"32"},{"size":820,"mtime":1611792108869,"results":"42","hashOfConfig":"32"},{"size":2954,"mtime":1611265849064,"results":"43","hashOfConfig":"32"},{"size":4842,"mtime":1611619084975,"results":"44","hashOfConfig":"32"},{"size":732,"mtime":1610754962437,"results":"45","hashOfConfig":"32"},{"size":667,"mtime":1610849104924,"results":"46","hashOfConfig":"32"},{"size":5141,"mtime":1611693202769,"results":"47","hashOfConfig":"32"},{"size":3522,"mtime":1611357705299,"results":"48","hashOfConfig":"32"},{"size":212,"mtime":1611119002849,"results":"49","hashOfConfig":"32"},{"size":6635,"mtime":1611792090776,"results":"50","hashOfConfig":"32"},{"size":3366,"mtime":1611792189061,"results":"51","hashOfConfig":"32"},{"size":5428,"mtime":1611793766351,"results":"52","hashOfConfig":"32"},{"size":506,"mtime":1611428032858,"results":"53","hashOfConfig":"32"},{"size":3331,"mtime":1611257558524,"results":"54","hashOfConfig":"32"},{"size":455,"mtime":1611158213116,"results":"55","hashOfConfig":"32"},{"size":257,"mtime":1611158377998,"results":"56","hashOfConfig":"32"},{"size":3968,"mtime":1611611343824,"results":"57","hashOfConfig":"32"},{"size":696,"mtime":1611443323328,"results":"58","hashOfConfig":"32"},{"size":1052,"mtime":1611598921796,"results":"59","hashOfConfig":"32"},{"size":2996,"mtime":1611844046685,"results":"60","hashOfConfig":"32"},{"size":5716,"mtime":1611809955999,"results":"61","hashOfConfig":"32"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},"13aw72n",{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89","usedDeprecatedRules":"64"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96","usedDeprecatedRules":"64"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"123","messages":"124","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/williamlytle/Flatiron/code/projects/phase5/expedition-planner-frontend/src/index.js",[],["125","126"],"/Users/williamlytle/Flatiron/code/projects/phase5/expedition-planner-frontend/src/reportWebVitals.js",[],"/Users/williamlytle/Flatiron/code/projects/phase5/expedition-planner-frontend/src/App.js",[],"/Users/williamlytle/Flatiron/code/projects/phase5/expedition-planner-frontend/src/components/SignUp.js",[],"/Users/williamlytle/Flatiron/code/projects/phase5/expedition-planner-frontend/src/reducers/index.js",[],"/Users/williamlytle/Flatiron/code/projects/phase5/expedition-planner-frontend/src/components/Login.js",[],"/Users/williamlytle/Flatiron/code/projects/phase5/expedition-planner-frontend/src/containers/MapContainer.js",["127","128"],"/Users/williamlytle/Flatiron/code/projects/phase5/expedition-planner-frontend/src/components/NavBar.js",[],"/Users/williamlytle/Flatiron/code/projects/phase5/expedition-planner-frontend/src/containers/Profile.js",[],"/Users/williamlytle/Flatiron/code/projects/phase5/expedition-planner-frontend/src/reducers/UserReducer.js",[],"/Users/williamlytle/Flatiron/code/projects/phase5/expedition-planner-frontend/src/actions/types.js",[],"/Users/williamlytle/Flatiron/code/projects/phase5/expedition-planner-frontend/src/actions/UserActions.js",[],"/Users/williamlytle/Flatiron/code/projects/phase5/expedition-planner-frontend/src/components/EditProfile.js",["129"],"import React, { useState, useEffect } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { Button, Col, Row, Container, Form, Card } from \"react-bootstrap\";\nimport { connect } from \"react-redux\";\nimport {\n  signedIn,\n  editUser,\n  failedAuth,\n  handleLogOut,\n} from \"../actions/UserActions\";\nimport SubmitButton from \"./SubmitButton\";\nimport DeleteAlert from \"../components/DeleteAlert\";\nimport canyon from \"../images/grand-canyon.JPG\";\n\nconst EditProfile = ({ user, editUser, failedAuth, error, handleLogOut }) => {\n  const [username, setUsername] = useState(user.username);\n  const [password, setPassword] = useState(\"\");\n  const [passwordConfirmation, setPasswordConfirmation] = useState(\"\");\n  const [show, setShow] = useState(false);\n  let history = useHistory();\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    if (password === passwordConfirmation) {\n      const id = user.id;\n      editUser(id, username, password);\n    } else {\n      failedAuth(\"Passords must match!\");\n    }\n  };\n\n  const deleteClicked = () => {\n    setShow(true);\n  };\n\n  const handleDelete = () => {\n    const id = user.id;\n    const token = localStorage.getItem(\"jwt\");\n    fetch(`http://localhost:3000/users/${id}`, {\n      method: \"DELETE\",\n      headers: {\n        Authorization: `bearer ${token}`,\n      },\n    }).then(() => {\n      localStorage.clear();\n      handleLogOut();\n      history.push(\"/\");\n    });\n  };\n\n  // if useState got set before redux state was loaded in set the suer naem to auto fill the form\n  useEffect(() => {\n    if (!user.id && !localStorage.getItem(\"userId\")) {\n      history.push(\"/login\");\n    } else if (user.id && !username) {\n      setUsername(user.username);\n    }\n  });\n  const inputClass = error ? \"is-invalid\" : \"\";\n  return (\n    <section>\n      <Container className=\"min-vh-100\">\n        <DeleteAlert\n          show={show}\n          item={\"profile\"}\n          deleteAction={handleDelete}\n          closeAction={setShow}\n        />\n        <Row className=\" min-vh-100\">\n          <Col\n            id=\"login\"\n            md={{ span: 6, offset: 0 }}\n            style={{ marginTop: \"40px\" }}\n          >\n            {\" \"}\n            <Card>\n              <Card.Img src={canyon} alt=\"Grand Canyon\" />\n            </Card>{\" \"}\n          </Col>\n          <Col md={{ span: 4, offset: 1 }} style={{ marginTop: \"40px\" }}>\n            <Card>\n              <Card.Body>\n                <Form onSubmit={handleSubmit}>\n                  <Form.Group controlId=\"formBasicUsername\">\n                    <Form.Label>Username</Form.Label>\n                    <Form.Control\n                      className={inputClass}\n                      type=\"text\"\n                      name=\"username\"\n                      placeholder=\"UserName\"\n                      value={username}\n                      onChange={(e) => setUsername(e.target.value)}\n                    />\n                  </Form.Group>\n\n                  <Form.Group controlId=\"formBasicPassword\">\n                    <Form.Label className=\"form-label\">New Password</Form.Label>\n                    <Form.Control\n                      className={inputClass}\n                      type=\"password\"\n                      name=\"Password\"\n                      placeholder=\"New Password\"\n                      value={password}\n                      onChange={(e) => setPassword(e.target.value)}\n                    />\n                  </Form.Group>\n\n                  <Form.Group controlId=\"formBasicPasswordConfirmation\">\n                    <Form.Label className=\"form-label\">\n                      Confirm New Password\n                    </Form.Label>\n                    <Form.Control\n                      className={inputClass}\n                      type=\"password\"\n                      name=\"passwordConfirmation\"\n                      placeholder=\"Password\"\n                      value={passwordConfirmation}\n                      onChange={(e) => setPasswordConfirmation(e.target.value)}\n                    />\n                    <div className=\"invalid-feedback\">{error}</div>\n                  </Form.Group>\n\n                  <SubmitButton btnTxt={\"Update Profile\"} />\n                  <Button\n                    variant=\"outline-danger form-btn\"\n                    type=\"button\"\n                    onClick={deleteClicked}\n                  >\n                    Delete Account\n                  </Button>\n                </Form>\n              </Card.Body>\n            </Card>\n          </Col>\n        </Row>\n      </Container>\n    </section>\n  );\n};\nconst mapStateToProps = (state) => {\n  return {\n    user: state.UserReducer.user,\n    fetching: state.UserReducer.fetching,\n    error: state.UserReducer.error,\n  };\n};\n\nexport default connect(mapStateToProps, {\n  signedIn,\n  editUser,\n  failedAuth,\n  handleLogOut,\n})(EditProfile);\n","/Users/williamlytle/Flatiron/code/projects/phase5/expedition-planner-frontend/src/components/SubmitButton.js",[],"/Users/williamlytle/Flatiron/code/projects/phase5/expedition-planner-frontend/src/helpers/index.js",[],"/Users/williamlytle/Flatiron/code/projects/phase5/expedition-planner-frontend/src/components/Trips.js",["130"],"import React, { useRef, useState, useEffect } from \"react\";\nimport { connect } from \"react-redux\";\nimport { useLocation, useHistory } from \"react-router-dom\";\nimport { Tab, ListGroup, Col, Row } from \"react-bootstrap\";\nimport NewTripForm from \"./NewTripForm\";\nimport EditTripForm from \"./EditTripForm\";\nimport TripDetails from \"./TripDetails\";\n\n//Render a list of alll a users trips with a pop up tab to show trip details\nconst Trips = ({ allTrips, invites }) => {\n  const formRef = useRef();\n  const newRef = useRef();\n  const [selectedTrip, setSelectedTrip] = useState(false);\n  const [displayId, setDisplayId] = useState(null);\n\n  let location = useLocation();\n  let history = useHistory();\n  // set trips based on if we are on the profile page or the invitioans page\n  let trips = location.pathname === \"/profile\" ? allTrips : invites;\n\n  //open Edit Form\n  const triggerForm = (trip) => {\n    formRef.current.setAttribute(\"aria-hidden\", false);\n    formRef.current.className = \"fade tab-pane active show\";\n    setSelectedTrip(trip);\n  };\n  //Close Edit Form\n  const closeEdit = (id) => {\n    //set the id of the currently displayed trip\n    if (formRef.current.getAttribute(\"aria-hidden\")) {\n      formRef.current.setAttribute(\"aria-hidden\", true);\n      formRef.current.className = \"fade tab-pane\";\n    }\n  };\n\n  //close the new trip form\n  const closeNew = () => {\n    const id = location.hash.slice(1);\n    // closePane(id);\n    if (newRef.current.getAttribute(\"aria-hidden\")) {\n      newRef.current.setAttribute(\"aria-hidden\", true);\n      newRef.current.className = \"fade tab-pane\";\n    }\n  };\n\n  //close current pane\n  const closePane = (id) => {\n    console.log(\"close\", id);\n    const curPane = document.getElementById(`list-group-trips-tabpane-#${id}`);\n    if (!curPane) return;\n    curPane.setAttribute(\"aria-hidden\", true);\n    curPane.className = \"fade tab-pane\";\n  };\n\n  // open trip detail\n  const openDetail = (id) => {\n    // just incase also close the edit form\n    closeEdit();\n    closeNew();\n    closePane(prevDisplay);\n    // set this id as the next value for previous display\n    setDisplayId(id);\n    const curPane = document.getElementById(`list-group-trips-tabpane-#${id}`);\n    curPane.setAttribute(\"aria-hidden\", false);\n    curPane.className = \"fade tab-pane active show\";\n  };\n\n  //Record previous values\n  const usePrevious = (value) => {\n    const ref = useRef();\n    useEffect(() => {\n      ref.current = value;\n    });\n    return ref.current;\n  };\n\n  //record currently open display window to be closed when the next one is clicked\n  const prevDisplay = usePrevious(displayId);\n  useEffect(() => {\n    // check if we have been directed here from the invites link and if so get the has value and open the correspodnign trip detail\n    if (location?.pathname === \"/invites\" && location?.hash.length) {\n      // Get selected invite id\n      const id = location.hash.slice(1);\n      invites.find((i) => i.id === +id)\n        ? openDetail(id)\n        : history.push(\"/invites\");\n    }\n  });\n\n  return (\n    <div>\n      <Tab.Container id=\"list-group-trips\" defaultActiveKey=\"#link1\">\n        <Row>\n          <Col sm={4}>\n            <ListGroup className=\"trip-list\">\n              {location.pathname === \"/profile\" ? (\n                <ListGroup.Item action href=\"#newTrip\">\n                  New Trip\n                </ListGroup.Item>\n              ) : null}\n              {trips.length ? (\n                trips.map((trip) => {\n                  return (\n                    <ListGroup.Item\n                      action\n                      key={trip.id}\n                      href={`#${trip.id}`}\n                      onClick={() => closeEdit(trip.id)}\n                    >\n                      {\" \"}\n                      {trip.name}\n                    </ListGroup.Item>\n                  );\n                })\n              ) : (\n                <ListGroup.Item>\n                  {`You don't have any ${\n                    location.pathname === \"invitations\"\n                      ? \"invitations \"\n                      : \"trips \"\n                  }right now.`}\n                </ListGroup.Item>\n              )}\n            </ListGroup>\n          </Col>\n          <Col sm={8}>\n            <Tab.Content>\n              <Tab.Pane eventKey=\"#newTrip\" ref={newRef}>\n                <NewTripForm />\n              </Tab.Pane>\n              <Tab.Pane eventKey=\"#editTrip\" ref={formRef}>\n                {selectedTrip ? (\n                  <EditTripForm trip={selectedTrip} closeEdit={closeEdit} />\n                ) : null}\n              </Tab.Pane>\n              {trips.map((trip) => {\n                return (\n                  <Tab.Pane key={trip.id} eventKey={`#${trip.id}`}>\n                    <TripDetails trip={trip} edit={triggerForm} />\n                  </Tab.Pane>\n                );\n              })}\n            </Tab.Content>\n          </Col>\n        </Row>\n      </Tab.Container>\n    </div>\n  );\n};\nconst mapStateToProps = (state) => {\n  return {\n    allTrips: state.TripReducer.allTrips,\n    invites: state.TripReducer.invites,\n  };\n};\n\nexport default connect(mapStateToProps)(Trips);\n","/Users/williamlytle/Flatiron/code/projects/phase5/expedition-planner-frontend/src/components/NewTripForm.js",[],"/Users/williamlytle/Flatiron/code/projects/phase5/expedition-planner-frontend/src/constants/index.js",[],"/Users/williamlytle/Flatiron/code/projects/phase5/expedition-planner-frontend/src/actions/TripActions.js",[],"/Users/williamlytle/Flatiron/code/projects/phase5/expedition-planner-frontend/src/reducers/TripReducer.js",[],"/Users/williamlytle/Flatiron/code/projects/phase5/expedition-planner-frontend/src/components/TripDetails.js",[],"/Users/williamlytle/Flatiron/code/projects/phase5/expedition-planner-frontend/src/components/TripLeg.js",[],"/Users/williamlytle/Flatiron/code/projects/phase5/expedition-planner-frontend/src/components/LegForm.js",[],"/Users/williamlytle/Flatiron/code/projects/phase5/expedition-planner-frontend/src/reducers/MapReducer.js",[],"/Users/williamlytle/Flatiron/code/projects/phase5/expedition-planner-frontend/src/actions/MapActions.js",[],"/Users/williamlytle/Flatiron/code/projects/phase5/expedition-planner-frontend/src/components/EditTripForm.js",[],"/Users/williamlytle/Flatiron/code/projects/phase5/expedition-planner-frontend/src/components/DeleteAlert.js",[],"/Users/williamlytle/Flatiron/code/projects/phase5/expedition-planner-frontend/src/components/AsyncSearchBar.js",[],"/Users/williamlytle/Flatiron/code/projects/phase5/expedition-planner-frontend/src/containers/EleContainer.js",["131","132","133"],"/Users/williamlytle/Flatiron/code/projects/phase5/expedition-planner-frontend/src/components/EleChart.js",["134","135","136"],{"ruleId":"137","replacedBy":"138"},{"ruleId":"139","replacedBy":"140"},{"ruleId":"141","severity":1,"message":"142","line":139,"column":3,"nodeType":"143","endLine":139,"endColumn":12,"suggestions":"144"},{"ruleId":"145","severity":1,"message":"146","line":246,"column":55,"nodeType":"147","messageId":"148","endLine":246,"endColumn":57},{"ruleId":"141","severity":1,"message":"149","line":52,"column":3,"nodeType":"143","endLine":52,"endColumn":12,"suggestions":"150"},{"ruleId":"151","severity":1,"message":"152","line":38,"column":11,"nodeType":"143","messageId":"153","endLine":38,"endColumn":13},{"ruleId":"154","severity":1,"message":"155","line":21,"column":11,"nodeType":"147","messageId":"156","endLine":21,"endColumn":70},{"ruleId":"154","severity":1,"message":"157","line":24,"column":30,"nodeType":"147","messageId":"156","endLine":24,"endColumn":51},{"ruleId":"154","severity":1,"message":"158","line":25,"column":37,"nodeType":"147","messageId":"156","endLine":25,"endColumn":67},{"ruleId":"141","severity":1,"message":"159","line":9,"column":6,"nodeType":"160","endLine":9,"endColumn":12,"suggestions":"161"},{"ruleId":"151","severity":1,"message":"162","line":66,"column":11,"nodeType":"143","messageId":"153","endLine":66,"endColumn":25},{"ruleId":"151","severity":1,"message":"163","line":67,"column":11,"nodeType":"143","messageId":"153","endLine":67,"endColumn":25},"no-native-reassign",["164"],"no-negated-in-lhs",["165"],"react-hooks/exhaustive-deps","React Hook useEffect contains a call to 'setBounds'. Without a list of dependencies, this can lead to an infinite chain of updates. To fix this, pass [blip, user.id, trip.id, trip.locations, bounds, elevation, history, getTrip, id] as a second argument to the useEffect Hook.","Identifier",["166"],"array-callback-return","Array.prototype.filter() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","React Hook useEffect contains a call to 'setUsername'. Without a list of dependencies, this can lead to an infinite chain of updates. To fix this, pass [user.id, user.username, username, history] as a second argument to the useEffect Hook.",["167"],"no-unused-vars","'id' is assigned a value but never used.","unusedVar","no-loop-func","Function declared in a loop contains unsafe references to variable(s) 'locs', 'locs'.","unsafeRefs","Function declared in a loop contains unsafe references to variable(s) 'legId'.","Function declared in a loop contains unsafe references to variable(s) 'leg'.","React Hook useEffect has a missing dependency: 'drawChart'. Either include it or remove the dependency array.","ArrayExpression",["168"],"'makeXGridlines' is assigned a value but never used.","'makeYGridlines' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"169","fix":"170"},{"desc":"171","fix":"172"},{"desc":"173","fix":"174"},"Add dependencies array: [blip, user.id, trip.id, trip.locations, bounds, elevation, history, getTrip, id]",{"range":"175","text":"176"},"Add dependencies array: [user.id, user.username, username, history]",{"range":"177","text":"178"},"Update the dependencies array to be: [data, drawChart]",{"range":"179","text":"180"},[5695,5695],", [blip, user.id, trip.id, trip.locations, bounds, elevation, history, getTrip, id]",[1715,1715],", [user.id, user.username, username, history]",[258,264],"[data, drawChart]"]